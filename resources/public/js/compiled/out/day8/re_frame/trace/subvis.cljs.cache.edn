{:rename-macros {}, :renames {}, :externs {Error {}, d3 {select {}, scaleOrdinal {}, schemeCategory20 {}, forceSimulation {}, forceLink {}, forceManyBody {}, forceCenter {}, event {active {}, x {}, y {}}, drag {}}, Object {force {}, id {}, distance {}, strength {}, on {}, remove {}}}, :use-macros {}, :excludes #{}, :name day8.re-frame.trace.subvis, :imports nil, :requires {re-frame.interop re-frame.interop, set clojure.set, reagent.core reagent.core, r reagent.core, day8.re-frame.trace.d3 day8.re-frame.trace.d3, gob goog.object, goog.object goog.object, db re-frame.db, d3t day8.re-frame.trace.d3, clojure.set clojure.set, day8.re-frame.trace.graph day8.re-frame.trace.graph, interop re-frame.interop, graph day8.re-frame.trace.graph, re-frame.db re-frame.db, cljsjs.d3 cljsjs.d3}, :cljs.spec/speced-vars [], :uses nil, :defs {width {:name day8.re-frame.trace.subvis/width, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 11, :column 1, :end-line 11, :end-column 11, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 11, :column 6, :end-line 11, :end-column 11}, :tag number}, height {:name day8.re-frame.trace.subvis/height, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 12, :column 1, :end-line 12, :end-column 12, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 12, :column 6, :end-line 12, :end-column 12}, :tag number}, prev-graph {:name day8.re-frame.trace.subvis/prev-graph, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 14, :column 1, :end-line 14, :end-column 16, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 14, :column 6, :end-line 14, :end-column 16}, :tag any}, mygraph {:name day8.re-frame.trace.subvis/mygraph, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 15, :column 1, :end-line 15, :end-column 13, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 15, :column 6, :end-line 15, :end-column 13}, :tag any}, app-db-node {:name day8.re-frame.trace.subvis/app-db-node, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 20, :column 1, :end-line 20, :end-column 17, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 20, :column 6, :end-line 20, :end-column 17}, :tag cljs.core/IMap}, render-node? {:protocol-inline nil, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([d]))}, :name day8.re-frame.trace.subvis/render-node?, :variadic false, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :end-column 19, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, min-max {:protocol-inline nil, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 30, :column 7, :end-line 30, :end-column 14, :arglists (quote ([min-val x max-val])), :doc "Returns x if it is within min-val and max-val\n  otherwise returns min-val if x is less than min-val\n  and max-val if x is greater than max-val.\n\n  Essentially this provides a bounding box/clamp around x."}, :name day8.re-frame.trace.subvis/min-max, :variadic false, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :end-column 14, :method-params ([min-val x max-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([min-val x max-val])), :doc "Returns x if it is within min-val and max-val\n  otherwise returns min-val if x is less than min-val\n  and max-val if x is greater than max-val.\n\n  Essentially this provides a bounding box/clamp around x."}, render-subvis {:protocol-inline nil, :meta {:file "/Users/mooreb/projects/bmo/scratch/snail/resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :line 40, :column 7, :end-line 40, :end-column 20, :arglists (quote ([traces-ratom]))}, :name day8.re-frame.trace.subvis/render-subvis, :variadic false, :file "resources/public/js/compiled/out/day8/re_frame/trace/subvis.cljs", :end-column 20, :method-params ([traces-ratom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([traces-ratom]))}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:svg#d3cmp :r :hr :group :d3-once :render-component :value :width :source :title :d3-update :div :nodes :id :fy :target :fx :links :height}, :order [:nodes :links :id :group :source :target :value :title :r :fx :fy :div :render-component :d3-once :d3-update :svg#d3cmp :width :height :hr]}, :doc nil}